---

# project information
project_name: mullvad-browser
project_url: "https://mullvad.net/en/browser"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mullvad-browser-logo.png"
project_blurb: "The [Mullvad Browser]({{ project_url }}) is a privacy-focused web browser developed in a collaboration between Mullvad VPN and the Tor Project. It’s designed to minimize tracking and fingerprinting. You could say it’s a Tor Browser to use without the Tor Network. Instead, you can use it with a trustworthy VPN."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_blurb_optional_extras_enabled: false

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "latest"}

# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "/path/to/{{ project_name }}/config", desc: "Users home directory in the container, stores local files and settings" }
param_usage_include_ports: true
param_ports:
  - { external_port: "3000", internal_port: "3000", port_desc: "Mullvad Browser GUI." }
  - { external_port: "3001", internal_port: "3001", port_desc: "Mullvad Browser GUI HTTPS." }
custom_params:
  - { name: "shm-size", name_compose: "shm_size", value: "1gb",desc: "This is needed for any modern website to function like youtube." }
cap_add_param: true
cap_add_param_vars:
  - { cap_add_var: "NET_ADMIN" }
opt_param_usage_include_env: true
opt_param_env_vars:
  - { env_var: "LOCAL_NET", env_value: "192.168.0.0/16", desc: "If using a VPN, set this to your local LAN IP range using CIDR notation. Without it you will be unable to access the web interface. If you have multiple ranges or a complex LAN setup you will need to manage this yourself in the wg0.conf, see the App Setup section for details."}
opt_security_opt_param: true
opt_security_opt_param_vars:
  - { run_var: "seccomp=unconfined", compose_var: "seccomp:unconfined", desc: "For Docker Engine only, many modern gui apps need this to function on older hosts as syscalls are unknown to Docker." }

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  The application can be accessed at:

  * http://yourhost:3000/
  * https://yourhost:3001/

  ## VPN Connectivity

  Generate a Wireguard conf from your VPN provider and copy it into the /config mount with a name of `wg0.conf`. If a valid conf is found at startup, the container will connect to the VPN and route all traffic over it. This container is *not* designed for routing other containers traffic and should only be used standlone.

  ## Maintaining local access to attached services

  When routing traffic via Wireguard you will typically lose access to the webUI. For simple LAN environments you can set the `LOCAL_NET` environment variable and we will configure routing for you.

  If you have more complex network setup, you will need to manually exclude your local networks from being routed via Wireguard by modifying your `wg0.conf` like so, modifying the HOMENET subnets to match your LAN range(s):

    ```ini
    [Interface]
    PrivateKey = <private key>
    Address = 9.8.7.6/32
    DNS = 8.8.8.8
    PostUp = DROUTE=$(ip route | grep default | awk '{print $3}'); HOMENET=192.168.0.0/16; HOMENET2=10.0.0.0/8; HOMENET3=172.16.0.0/12; ip route add $HOMENET3 via $DROUTE;ip route add $HOMENET2 via $DROUTE; ip route add $HOMENET via $DROUTE;iptables -I OUTPUT -d $HOMENET -j ACCEPT;iptables -A OUTPUT -d $HOMENET2 -j ACCEPT; iptables -A OUTPUT -d $HOMENET3 -j ACCEPT;  iptables -A OUTPUT ! -o %i -m mark ! --mark $(wg show %i fwmark) -m addrtype ! --dst-type LOCAL -j REJECT
    PreDown = HOMENET=192.168.0.0/16; HOMENET2=10.0.0.0/8; HOMENET3=172.16.0.0/12; ip route del $HOMENET3 via $DROUTE;ip route del $HOMENET2 via $DROUTE; ip route del $HOMENET via $DROUTE; iptables -D OUTPUT ! -o %i -m mark ! --mark $(wg show %i fwmark) -m addrtype ! --dst-type LOCAL -j REJECT; iptables -D OUTPUT -d $HOMENET -j ACCEPT; iptables -D OUTPUT -d $HOMENET2 -j ACCEPT; iptables -D OUTPUT -d $HOMENET3 -j ACCEPT
    ```

  ### Options in all KasmVNC based GUI containers

  This container is based on [Docker Baseimage KasmVNC](https://github.com/linuxserver/docker-baseimage-kasmvnc) which means there are additional environment variables and run configurations to enable or disable specific functionality.

  #### Optional environment variables

  | Variable | Description |
  | :----: | --- |
  | CUSTOM_PORT | Internal port the container listens on for http if it needs to be swapped from the default 3000. |
  | CUSTOM_HTTPS_PORT | Internal port the container listens on for https if it needs to be swapped from the default 3001. |
  | CUSTOM_USER | HTTP Basic auth username, abc is default. |
  | PASSWORD | HTTP Basic auth password, abc is default. If unset there will be no auth |
  | SUBFOLDER | Subfolder for the application if running a subfolder reverse proxy, need both slashes IE `/subfolder/` |
  | TITLE | The page title displayed on the web browser, default "KasmVNC Client". |
  | FM_HOME | This is the home directory (landing) for the file manager, default "/config". |
  | START_DOCKER | If set to false a container with privilege will not automatically start the DinD Docker setup. |
  | DRINODE | If mounting in /dev/dri for [DRI3 GPU Acceleration](https://www.kasmweb.com/kasmvnc/docs/master/gpu_acceleration.html) allows you to specify the device to use IE `/dev/dri/renderD128` |
  | LC_ALL | Set the Language for the container to run as IE `fr_FR.UTF-8` `ar_AE.UTF-8` |
  | NO_DECOR | If set the application will run without window borders for use as a PWA. |
  | NO_FULL | Do not autmatically fullscreen applications when using openbox. |

  #### Optional run configurations

  | Variable | Description |
  | :----: | --- |
  | `--privileged` | Will start a Docker in Docker (DinD) setup inside the container to use docker in an isolated environment. For increased performance mount the Docker directory inside the container to the host IE `-v /home/user/docker-data:/var/lib/docker`. |
  | `-v /var/run/docker.sock:/var/run/docker.sock` | Mount in the host level Docker socket to either interact with it via CLI or use Docker enabled applications. |
  | `--device /dev/dri:/dev/dri` | Mount a GPU into the container, this can be used in conjunction with the `DRINODE` environment variable to leverage a host video card for GPU accelerated appplications. Only **Open Source** drivers are supported IE (Intel,AMDGPU,Radeon,ATI,Nouveau) |

  ### Language Support - Internationalization

  The environment variable `LC_ALL` can be used to start this image in a different language than English simply pass for example to launch the Desktop session in French `LC_ALL=fr_FR.UTF-8`. Some languages like Chinese, Japanese, or Korean will be missing fonts needed to render properly known as cjk fonts, but others may exist and not be installed. We only ensure fonts for Latin characters are present. Fonts can be installed with a mod on startup.

  To install cjk fonts on startup as an example pass the environment variables:

  ```
  -e DOCKER_MODS=linuxserver/mods:universal-package-install
  -e INSTALL_PACKAGES=fonts-noto-cjk
  -e LC_ALL=zh_CN.UTF-8
  ```

  The web interface has the option for "IME Input Mode" in Settings which will allow non english characters to be used from a non en_US keyboard on the client. Once enabled it will perform the same as a local Linux installation set to your locale.

  ### Lossless mode

  This container is capable of delivering a true lossless image at a high framerate to your web browser by changing the Stream Quality preset to "Lossless", more information [here](https://www.kasmweb.com/docs/latest/how_to/lossless.html#technical-background). In order to use this mode from a non localhost endpoint the HTTPS port on 3001 needs to be used. If using a reverse proxy to port 3000 specific headers will need to be set as outlined [here](https://github.com/linuxserver/docker-baseimage-kasmvnc#lossless).

# changelog
changelogs:
  - { date: "28.08.24:", desc: "Rebase to noble." }
  - { date: "10.02.24:", desc: "Update Readme with new env vars and ingest proper PWA icon." }
  - { date: "03.04.23:", desc: "Initial release." }
